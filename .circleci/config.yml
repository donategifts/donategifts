jobs:
  test:
    docker:
      - image: 'circleci/node:14'
      - image: 'mongo:latest'
      - image: 'redis:latest'
    steps:
      - checkout
      - run:
          name: Copy default config
          command: cp config/example-config.env config/config.env
      - run:
          name: Install NPM 7
          command: sudo npm install -g npm@7
      - run:
          name: Install packages
          command: npm install
      - run:
          name: Test with npm
          command: npm test
      - run:
          name: Check lint
          command: npm run lint

  deploy-dev:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - '6b:c1:82:ac:d3:ad:3c:73:22:f4:9b:8c:b4:2d:f5:6c'
      - run:
          name: deploying to devserver
          command: ssh -o StrictHostKeyChecking=no donategifts@dev.donate-gifts.com "cd donategifts && rm -rf node-modules && rm -rf .adminbro && git fetch origin && git clean -qdf && git reset --hard origin/master &&  pwd &&  cd config &&  echo \"$MONGODB\" > config.env &&  echo NODE_ENV=development >> config.env &&  echo SESS_NAME=sid >> config.env &&  echo $SESS_SECRET >> config.env &&  echo SESS_LIFE=3600000 >> config.env &&  echo MAILGUN_API_KEY=onlyneededforproduction >> config.env &&  echo MAILGUN_DOMAIN=onlyneededforproduction >> config.env &&  echo USE_AWS=true >> config.env &&  echo $AWS_KEY >> config.env &&  echo $AWS_SECRET >> config.env &&  echo S3BUCKET=donategifts >> config.env &&  echo DEFAULT_EMAIL=no-reply@donate-gifts.com >> config.env &&  echo BASE_URL=https://dev.donate-gifts.com >> config.env &&  echo GOOGLE_CAPTCHA_KEY= >> config.env &&  echo LOCAL_DEVELOPMENT= >> config.env &&  echo SOCKET_URL=wss://dev.donate-gifts.com >> config.env &&  echo $G_CLIENT_ID >> config.env &&  echo $FB_APP_ID >> config.env &&  echo $SLACK_INTEGRATION >> config.env &&  echo $SCRAPINGBEE_APIKEY >> config.env && echo $STRIPE_APITEST >> config.env && echo $STRIPE_KEYTEST >> config.env && echo $STRIPE_SECRETTEST >> config.env && echo $SLACK_INTEGRATION_DONATION >> config.env && echo WISHCARD_LOCK_IN_MINUTES=1 >> config.env && echo $PAYPAL_CLIENT_IDTEST >> config.env && echo $PAYPAL_SECRETTEST >> config.env && echo $PAYPAL_WEBHOOK_IDTEST >> config.env && cd .. && npm install && pm2 stop all || true && pm2 start server/app.js  "

  deploy-prod:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - 'ab:ac:ca:64:39:93:c6:64:81:d8:50:cc:6b:a1:06:64'
      - run:
          name: deploying to prodserver
          command: ssh -p 6617 -o StrictHostKeyChecking=no donategifts@donate-gifts.com "cd donategifts && rm -rf node-modules && rm -rf .adminbro && git fetch origin && git clean -qdf && git reset --hard origin/production &&  pwd &&  cd config &&  echo \"$MONGODBLIVE\" > config.env &&  echo NODE_ENV=production >> config.env &&  echo SESS_NAME=sid >> config.env &&  echo $SESS_SECRETLIVE >> config.env &&  echo SESS_LIFE=31556952000 >> config.env &&  echo $MAILGUN_APIKEYLIVE >> config.env &&  echo $MAILGUN_DOMAINLIVE >> config.env &&  echo USE_AWS=true >> config.env &&  echo $AWS_KEY >> config.env &&  echo $AWS_SECRET >> config.env &&  echo S3BUCKET=donategifts >> config.env &&  echo DEFAULT_EMAIL=no-reply@donate-gifts.com >> config.env &&  echo BASE_URL=https://donate-gifts.com >> config.env &&  echo $GOOGLE_CAPTCHALIVE >> config.env &&  echo LOCAL_DEVELOPMENT= >> config.env &&  echo SOCKET_URL=wss://donate-gifts.com >> config.env &&  echo $G_CLIENT_ID >> config.env &&  echo $FB_APP_ID >> config.env &&  echo $SLACK_INTEGRATION >> config.env &&  echo $SCRAPINGBEE_APIKEY >> config.env &&   echo $STRIPE_API >> config.env && echo $STRIPE_KEY >> config.env && echo $STRIPE_SECRET >> config.env && echo $SLACK_INTEGRATION_DONATION >> config.env && echo WISHCARD_LOCK_IN_MINUTES=10 >> config.env && echo $PAYPAL_CLIENT_ID >> config.env && echo $PAYPAL_SECRET >> config.env && echo $PAYPAL_WEBHOOK_ID >> config.env && cd .. && NODE_ENV=production npm install --production && pm2 stop all || true && pm2 start server/app.js "

version: 2.1
workflows:
#  test:
#    jobs:
#      - test:
#          filters:
#            branches:
#              ignore:
#                - master
  deploy-dev:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
      - deploy-dev:
          requires:
            - test
          filters:
            branches:
              only:
                - master
  deploy-prod:
    jobs:
      - test:
          filters:
            branches:
              only:
                - production
      - deploy-prod:
          requires:
            - test
          filters:
            branches:
              only:
                - production
